{"code":"import React, { memo } from 'react';\r\nimport Icon from \"../Icon\";\r\n// Button\r\nimport './index.module.less';\r\n// \r\nconst Button = memo((props) => {\r\n    const { type, size, disabled, radius, loading, onClick, children, className, style } = props;\r\n    // \r\n    // 类型列表\r\n    const typeList = ['default', 'primary', 'success', 'warning', 'danger', 'text'];\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"button\", { className: (size?.includes('middle') ? 'o-button-middle' : size?.includes('large') ? 'o-button-large' : 'o-button-small')\r\n                + ' '\r\n                + 'o-button'\r\n                + ' '\r\n                + 'o-button' + (typeList.includes(type) && !type?.includes('default') ? `-${type}` : '')\r\n                + `${radius ? ' o-button-radius' : ''}`\r\n                + `${typeof className === 'string' ? ' ' + className : ''}`, style: style, disabled: disabled, onClick: (event) => {\r\n                if (loading) {\r\n                    return;\r\n                }\r\n                if (typeof onClick === 'function')\r\n                    onClick(event);\r\n            } },\r\n            loading && React.createElement(\"div\", { style: { margin: '5px 10px 5px 5px' } },\r\n                React.createElement(Icon, { name: \"loading\", spin: true, size: 1.5 })),\r\n            children)));\r\n});\r\nexport default Button;\r\n","references":["D:/project/orui-ui/node_modules/@types/react/index.d.ts","D:/project/orui-ui/packages/orui-react/src/Icon/index.tsx"],"dts":{"name":"D:/project/orui-ui/packages/orui-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/Button/index.d.ts","writeByteOrderMark":false,"text":"import React, { FC } from 'react';\r\nimport './index.module.less';\r\ninterface ButtonProps {\r\n    /**\r\n     * @description 类名\r\n     */\r\n    className?: String;\r\n    /**\r\n     * @description 节点样式\r\n     */\r\n    style?: Object;\r\n    /**\r\n     *@description 按钮主题： default、primary、success、warning、danger、text\r\n     *@default default\r\n    */\r\n    type?: String;\r\n    /**\r\n    * @description 大小： small、middle、large\r\n    * @default small\r\n    */\r\n    size?: String;\r\n    /**\r\n     *@description 禁用状态\r\n     *@default false\r\n    */\r\n    disabled?: Boolean;\r\n    /**\r\n     * @description 圆角状态\r\n     * @default false\r\n     */\r\n    radius?: Boolean;\r\n    /**\r\n     * @description 加载状态\r\n     * @default false\r\n     */\r\n    loading?: Boolean;\r\n    /**\r\n     * @description 按钮点击回调事件\r\n     */\r\n    onClick: Function;\r\n}\r\ndeclare type NativeButtonProps = Omit<React.ButtonHTMLAttributes<HTMLElement>, 'type'>;\r\ndeclare const Button: FC<ButtonProps & NativeButtonProps>;\r\nexport default Button;\r\n"}}
