{"code":"import React, { forwardRef, useState } from \"react\";\r\nimport './index.module.less';\r\nimport withModel from '../utils/withModel';\r\nimport { Icon } from '../index';\r\nconst Component = forwardRef((props, outerRef) => {\r\n    const p = { rows: 4, ...props };\r\n    let { size = 'small', type, clearable = false, onFocus, onBlur, cleanContent, showPassword = true, disabled, value, prefixIcon, prefixIconColor, prefixIconClick, suffixIcon, suffixIconColor, suffixIconClick } = p;\r\n    // type 属性限制\r\n    const typeList = ['text', 'email', 'password', 'number', 'textarea', 'url', 'tel', 'search'];\r\n    if (!type || !typeList.includes(type))\r\n        type = 'text';\r\n    // 删除部分属性\r\n    const deleteAttribute = [\r\n        'size', 'clearable', 'onFocus', 'onBlur', 'cleanContent', 'showPassword',\r\n        'prefixIcon', 'prefixIconColor', 'prefixIconClick', 'suffixIcon', 'suffixIconColor',\r\n        'suffixIconClick',\r\n    ];\r\n    for (let item of deleteAttribute) {\r\n        delete p[item];\r\n    }\r\n    // 当前焦点状态\r\n    const [currentFocus, setCurrentValue] = useState(false);\r\n    // 密码显示状态\r\n    const [showPasswords, setShowPasswordsValue] = useState(true);\r\n    let element = React.createElement(\"div\", { className: `o-input o-input-border ${['small', 'middle', 'large'].includes(size) && !type.includes('textarea') ?\r\n            'o-input-' + size : ''} ${currentFocus ? 'o-input-border-focus' : ''} ${disabled ? 'o-input-border-disabled' : ''}` },\r\n        prefixIcon !== undefined && !type.includes('textarea') && React.createElement(Icon, { name: prefixIcon, size: 1.5, color: prefixIconColor, onClick: prefixIconClick }),\r\n        type.includes('textarea') && React.createElement(\"textarea\", { ref: outerRef, ...p, type: type.includes('password') && !showPasswords ? 'text' : type, onFocus: (event) => {\r\n                setCurrentValue(true);\r\n                if (typeof onFocus === 'function')\r\n                    onFocus(event);\r\n            }, onBlur: (event) => {\r\n                setCurrentValue(false);\r\n                if (typeof onBlur === 'function')\r\n                    onBlur(event);\r\n            } }),\r\n        !type.includes('textarea') && React.createElement(\"input\", { ref: outerRef, ...p, type: type.includes('password') && !showPasswords ? 'text' : type, onFocus: (event) => {\r\n                setCurrentValue(true);\r\n                if (typeof onFocus === 'function')\r\n                    onFocus(event);\r\n            }, onBlur: (event) => {\r\n                setCurrentValue(false);\r\n                if (typeof onBlur === 'function')\r\n                    onBlur(event);\r\n            } }),\r\n        clearable && value && !type.includes('textarea') && React.createElement(Icon, { name: \"close\", size: 1, onClick: () => {\r\n                if (typeof cleanContent === 'function')\r\n                    cleanContent();\r\n            } }),\r\n        type.includes('password') && showPassword && React.createElement(Icon, { name: showPasswords ? 'eyeClose' : 'eye', size: 1, color: \"#8a8a8a\", onClick: () => {\r\n                setShowPasswordsValue(!showPasswords);\r\n            } }),\r\n        suffixIcon !== undefined && !type.includes('textarea') && React.createElement(Icon, { name: suffixIcon, size: 1.5, color: suffixIconColor, onClick: suffixIconClick }));\r\n    return (React.createElement(React.Fragment, null, !['checkbox', 'file', 'radio'].includes(type) && element));\r\n});\r\nComponent.displayName = 'Input';\r\nexport default withModel(Component);\r\n","references":["D:/project/orui-ui/node_modules/@types/react/index.d.ts","D:/project/orui-ui/packages/orui-react/src/utils/withModel.tsx","D:/project/orui-ui/packages/orui-react/src/index.ts"],"dts":{"name":"D:/project/orui-ui/packages/orui-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/Input/index.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\nimport './index.module.less';\r\ndeclare const _default: React.ForwardRefExoticComponent<React.RefAttributes<unknown>>;\r\nexport default _default;\r\n"}}
