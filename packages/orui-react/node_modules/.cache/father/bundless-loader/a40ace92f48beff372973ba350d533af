{"value":{"content":"import React, { memo } from 'react';\nimport Icon from \"../Icon\"; // Button\n\nimport \"./index.module.less\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// \nvar Button = /*#__PURE__*/memo(function (props) {\n  var type = props.type,\n      size = props.size,\n      disabled = props.disabled,\n      radius = props.radius,\n      loading = props.loading,\n      _onClick = props.onClick,\n      children = props.children,\n      className = props.className,\n      style = props.style; // \n  // 类型列表\n\n  var typeList = ['default', 'primary', 'success', 'warning', 'danger', 'text'];\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(\"button\", {\n      className: (size !== null && size !== void 0 && size.includes('middle') ? 'o-button-middle' : size !== null && size !== void 0 && size.includes('large') ? 'o-button-large' : 'o-button-small') + ' ' + 'o-button' + ' ' + 'o-button' + (typeList.includes(type) && !(type !== null && type !== void 0 && type.includes('default')) ? \"-\".concat(type) : '') + \"\".concat(radius ? ' o-button-radius' : '') + \"\".concat(typeof className === 'string' ? ' ' + className : ''),\n      style: style,\n      disabled: disabled,\n      onClick: function onClick(event) {\n        if (loading) {\n          return;\n        }\n\n        if (typeof _onClick === 'function') _onClick(event);\n      },\n      children: [loading && /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          margin: '5px 10px 5px 5px'\n        },\n        children: /*#__PURE__*/_jsx(Icon, {\n          name: \"loading\",\n          spin: true,\n          size: 1.5\n        })\n      }), children]\n    })\n  });\n});\nexport default Button;","options":{"ext":".js","declaration":true}},"type":"Object"}