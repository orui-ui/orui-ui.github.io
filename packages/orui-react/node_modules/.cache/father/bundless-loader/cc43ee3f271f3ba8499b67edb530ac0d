{"value":{"content":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { forwardRef, useState } from \"react\";\nimport \"./index.module.less\";\nimport withModel from \"../utils/withModel\";\nimport { Icon } from \"../index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Component = /*#__PURE__*/forwardRef(function (props, outerRef) {\n  var p = _objectSpread({\n    rows: 4\n  }, props);\n\n  var _p$size = p.size,\n      size = _p$size === void 0 ? 'small' : _p$size,\n      type = p.type,\n      _p$clearable = p.clearable,\n      clearable = _p$clearable === void 0 ? false : _p$clearable,\n      _onFocus = p.onFocus,\n      _onBlur = p.onBlur,\n      cleanContent = p.cleanContent,\n      _p$showPassword = p.showPassword,\n      showPassword = _p$showPassword === void 0 ? true : _p$showPassword,\n      disabled = p.disabled,\n      value = p.value,\n      prefixIcon = p.prefixIcon,\n      prefixIconColor = p.prefixIconColor,\n      prefixIconClick = p.prefixIconClick,\n      suffixIcon = p.suffixIcon,\n      suffixIconColor = p.suffixIconColor,\n      suffixIconClick = p.suffixIconClick; // type 属性限制\n\n  var typeList = ['text', 'email', 'password', 'number', 'textarea', 'url', 'tel', 'search'];\n  if (!type || !typeList.includes(type)) type = 'text'; // 删除部分属性\n\n  var deleteAttribute = ['size', 'clearable', 'onFocus', 'onBlur', 'cleanContent', 'showPassword', 'prefixIcon', 'prefixIconColor', 'prefixIconClick', 'suffixIcon', 'suffixIconColor', 'suffixIconClick'];\n\n  for (var _i = 0, _deleteAttribute = deleteAttribute; _i < _deleteAttribute.length; _i++) {\n    var item = _deleteAttribute[_i];\n    delete p[item];\n  } // 当前焦点状态\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentFocus = _useState2[0],\n      setCurrentValue = _useState2[1]; // 密码显示状态\n\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPasswords = _useState4[0],\n      setShowPasswordsValue = _useState4[1];\n\n  var element = /*#__PURE__*/_jsxs(\"div\", {\n    className: \"o-input o-input-border \".concat(['small', 'middle', 'large'].includes(size) && !type.includes('textarea') ? 'o-input-' + size : '', \" \").concat(currentFocus ? 'o-input-border-focus' : '', \" \").concat(disabled ? 'o-input-border-disabled' : ''),\n    children: [prefixIcon !== undefined && !type.includes('textarea') && /*#__PURE__*/_jsx(Icon, {\n      name: prefixIcon,\n      size: 1.5,\n      color: prefixIconColor,\n      onClick: prefixIconClick\n    }), type.includes('textarea') && /*#__PURE__*/_jsx(\"textarea\", _objectSpread(_objectSpread({\n      ref: outerRef\n    }, p), {}, {\n      type: type.includes('password') && !showPasswords ? 'text' : type,\n      onFocus: function onFocus(event) {\n        setCurrentValue(true);\n        if (typeof _onFocus === 'function') _onFocus(event);\n      },\n      onBlur: function onBlur(event) {\n        setCurrentValue(false);\n        if (typeof _onBlur === 'function') _onBlur(event);\n      }\n    })), !type.includes('textarea') && /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({\n      ref: outerRef\n    }, p), {}, {\n      type: type.includes('password') && !showPasswords ? 'text' : type,\n      onFocus: function onFocus(event) {\n        setCurrentValue(true);\n        if (typeof _onFocus === 'function') _onFocus(event);\n      },\n      onBlur: function onBlur(event) {\n        setCurrentValue(false);\n        if (typeof _onBlur === 'function') _onBlur(event);\n      }\n    })), clearable && value && !type.includes('textarea') && /*#__PURE__*/_jsx(Icon, {\n      name: \"close\",\n      size: 1,\n      onClick: function onClick() {\n        if (typeof cleanContent === 'function') cleanContent();\n      }\n    }), type.includes('password') && showPassword && /*#__PURE__*/_jsx(Icon, {\n      name: showPasswords ? 'eyeClose' : 'eye',\n      size: 1,\n      color: \"#8a8a8a\",\n      onClick: function onClick() {\n        setShowPasswordsValue(!showPasswords);\n      }\n    }), suffixIcon !== undefined && !type.includes('textarea') && /*#__PURE__*/_jsx(Icon, {\n      name: suffixIcon,\n      size: 1.5,\n      color: suffixIconColor,\n      onClick: suffixIconClick\n    })]\n  });\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: !['checkbox', 'file', 'radio'].includes(type) && element\n  });\n});\nComponent.displayName = 'Input';\nexport default withModel(Component);","options":{"ext":".js","declaration":true}},"type":"Object"}